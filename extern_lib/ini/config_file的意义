>>1.config 配置文件对服务器设计的重要性:
>>1.1:单点服务器网络常规参数
			(包含套接字属性控制和监听者属性控制, 容纳socket 数量等)
>>1.2:单点服务器全局常规参数
			(日志路径, 级别, 日志泄洪路径, [图片, 影音, 文件等资源路径]等)
>>1.3:群集数据库info 常规参数
			(数据量太多,分表分库之后,会导致info会比较大,但是db是对所有节点透明的)
>>1.4:群集服务器info 常规参数
			(记录所有站点的信息, 时间同步服务器信息, 启动开关等)
			[群集信息没有必要设计成观察者模式, 
			 虽然修改的时候比较麻烦, 每个服务器都要改, 但是:
			 使用配置表修改的方式, 无非是方便策划修改游戏平衡参数, 
			 真的要做观察者模式??
				还不如将配置参数存放进mysql, 
				这样每个节点都可自行联系mysql取出config,还省了观察者模式的设计]


	以上配置信息, xml, json, ini 均可, 方便就行, 
	但是一般是xml or json, 
	因为现在有一种库是直接将类编译出json or xml, 
	or 直接将xml, json 的数据赋值到类中,
	这种库还是很实用的


>>2.config 系统对游戏服务器的重要性:
	游戏服务器基本就是一个依赖config 导入参数的服务器, 
	这样可以方便策划不断修改游戏数值平衡, 从而不断迎合玩家的口味, 
	这种重度依赖config 导入参数的服务器, 是变动性比较大的服务器, 
	可调节要求高, 而且要求调节方便, 快速. 

	如果config 信息存放在mysql 中, 
	参数配置者可能得熟练mysql 命令或者mysql 图形化管理工具,
	而且复杂度也不高, 但是比较好的就是: 
		可以减少观察者模式, 如果你有观察者需求的话,
		最好做到: 主服务器修改, 所有服务器都跟着改的话. 



