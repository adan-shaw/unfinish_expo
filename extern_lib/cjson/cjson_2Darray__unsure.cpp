//111111111111111111111111111111111111111111111111111111111111111111111111
//格式测试:
//邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵邵
//起始日期:
//完成日期:
//************************************************************************
//修改日志:

//, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,, , ,

//编译:
//g++ -o x ./cjson_2Darray.cpp -ggdb3 -lcjson




#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <cjson/cJSON.h>


//未必一定要做成这样, 这样不方便调试, 的确可以压缩一些数据,
//还有操作步骤, 建议后期优化的时候, 可以考虑一下.
//但是这样的情况, 其实比较少用.
//因为这种少用场合, 搞个特殊模块出来, 不适合.


//测试数据3-字符串数组
/*
	(passed,如果真的要传输字符串数组.其实自己折成一个一元数组更靠谱,更快捷)
	设计一个将多串字符串, 折合成一串的函数.
	最好就是2 维转成1 维就足够了. int 打头, 后面是字符串. 永不停止.
	不按结束符不结束符的设计, 只按打头int 划分区间大小.!!
	且声明: 只能用于窄字符.
	然后将数据转为json 一维数组, 解析出一串字符串后, 再反向导出二维字符串数组
*/



